// <auto-generated />
using System;
using CompanyInfo.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyInfo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240529132021_InitDb")]
    partial class InitDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompanyInfo.Models.Concrete.Birim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BirimAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BirimAdi")
                        .IsUnique();

                    b.ToTable("Birimler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirimAdi = "Adet",
                            DateTime = new DateTime(2024, 5, 29, 16, 20, 21, 221, DateTimeKind.Local).AddTicks(7879)
                        },
                        new
                        {
                            Id = 2,
                            BirimAdi = "Cm",
                            DateTime = new DateTime(2024, 5, 29, 16, 20, 21, 221, DateTimeKind.Local).AddTicks(7881)
                        },
                        new
                        {
                            Id = 3,
                            BirimAdi = "Gram",
                            DateTime = new DateTime(2024, 5, 29, 16, 20, 21, 221, DateTimeKind.Local).AddTicks(7883)
                        },
                        new
                        {
                            Id = 4,
                            BirimAdi = "Miligram",
                            DateTime = new DateTime(2024, 5, 29, 16, 20, 21, 221, DateTimeKind.Local).AddTicks(7884)
                        });
                });

            modelBuilder.Entity("CompanyInfo.Models.Concrete.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriAdi")
                        .IsUnique();

                    b.ToTable("Kategoriler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2024, 5, 29, 16, 20, 21, 222, DateTimeKind.Local).AddTicks(826),
                            KategoriAdi = "Gıda"
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2024, 5, 29, 16, 20, 21, 222, DateTimeKind.Local).AddTicks(828),
                            KategoriAdi = "Tekstil"
                        });
                });

            modelBuilder.Entity("CompanyInfo.Models.Concrete.Tedarikci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SirketAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VergiNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("VergiNo")
                        .IsUnique();

                    b.ToTable("Tedarikciler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2024, 5, 29, 16, 20, 21, 222, DateTimeKind.Local).AddTicks(3623),
                            SirketAdi = "Abcd",
                            VergiNo = "1234"
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2024, 5, 29, 16, 20, 21, 222, DateTimeKind.Local).AddTicks(3625),
                            SirketAdi = "Abc",
                            VergiNo = "123"
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2024, 5, 29, 16, 20, 21, 222, DateTimeKind.Local).AddTicks(3627),
                            SirketAdi = "Bca",
                            VergiNo = "321"
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(2024, 5, 29, 16, 20, 21, 222, DateTimeKind.Local).AddTicks(3628),
                            SirketAdi = "Cba",
                            VergiNo = "213"
                        });
                });

            modelBuilder.Entity("CompanyInfo.Models.Concrete.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Adet")
                        .HasColumnType("float");

                    b.Property<int>("BirimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UrunKodu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BirimId");

                    b.HasIndex("UrunKodu")
                        .IsUnique()
                        .HasFilter("[UrunKodu] IS NOT NULL");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("KategoriUrun", b =>
                {
                    b.Property<int>("KategorilerId")
                        .HasColumnType("int");

                    b.Property<int>("UrunlerId")
                        .HasColumnType("int");

                    b.HasKey("KategorilerId", "UrunlerId");

                    b.HasIndex("UrunlerId");

                    b.ToTable("KategoriUrun");
                });

            modelBuilder.Entity("TedarikciUrun", b =>
                {
                    b.Property<int>("TedarikcilerId")
                        .HasColumnType("int");

                    b.Property<int>("UrunlerId")
                        .HasColumnType("int");

                    b.HasKey("TedarikcilerId", "UrunlerId");

                    b.HasIndex("UrunlerId");

                    b.ToTable("TedarikciUrun");
                });

            modelBuilder.Entity("CompanyInfo.Models.Concrete.Urun", b =>
                {
                    b.HasOne("CompanyInfo.Models.Concrete.Birim", "Birim")
                        .WithMany("Urunler")
                        .HasForeignKey("BirimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Birim");
                });

            modelBuilder.Entity("KategoriUrun", b =>
                {
                    b.HasOne("CompanyInfo.Models.Concrete.Kategori", null)
                        .WithMany()
                        .HasForeignKey("KategorilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyInfo.Models.Concrete.Urun", null)
                        .WithMany()
                        .HasForeignKey("UrunlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TedarikciUrun", b =>
                {
                    b.HasOne("CompanyInfo.Models.Concrete.Tedarikci", null)
                        .WithMany()
                        .HasForeignKey("TedarikcilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyInfo.Models.Concrete.Urun", null)
                        .WithMany()
                        .HasForeignKey("UrunlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CompanyInfo.Models.Concrete.Birim", b =>
                {
                    b.Navigation("Urunler");
                });
#pragma warning restore 612, 618
        }
    }
}
